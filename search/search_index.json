{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Thesez-vous This documentation is write to help people understand business rules of the platform and technical details. Some part are present only for developers or technician, but most of it is accessible to everyone.","title":"Home"},{"location":"#thesez-vous","text":"This documentation is write to help people understand business rules of the platform and technical details. Some part are present only for developers or technician, but most of it is accessible to everyone.","title":"Thesez-vous"},{"location":"CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting an administrator of the project. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Code of conduct"},{"location":"CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting an administrator of the project. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"DEPLOYING/","text":"Deploying to the development server The development branch already has continuous deployment enabled. Every time a new commit is pushed to the develop branch of this project, unit tests are executed and the updated version is deployed is the tests are successful. To mimick AWS Lambda's environment, we use a special Docker container (lambci/lambda:build-python3.6). That allows us to recreate the same environment anywhere, be it on a development PC or Travis. .travis.yml This file is pretty straightforward. It dictates Travis what to do. It contains some sensitive information in the form of encrypted environment variables: SENDINBLUE_API_KEY SECRET_KEY DATABASE_URL PAYSAFE_ACCOUNT_NUMBER PAYSAFE_USER PAYSAFE_PASSWORD EMAIL_HOST_PASSWORD AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY Those, along with the unencrypted variables, are used by Travis during the unit tests and used to set up Zappa settings before deployment. NOTE: If you inspect the settings.py file, you'll see that some settings are overwritten when in \"test\" mode. For example, the database used in unit tests will always be a sqlite3 database, regardless of the DATABASE_URL environment variable you set. write_secure_env.py That script is executed by Travis to fill the empty variables in zappa_settings.json . Travis is the only one to be able to decrypt the variables mentionned above, thus explaining the need for this script. deploy.sh This script automatize the environement creation and the deployment. An initial deployment with zappa is done with zappa deploy <stage> , where stage can be any string. That part is usually done by hand by a developer. It creates the necessary infrastructure on AWS. For the continuous deployment, we simply update the already deployed application using: zappa update dev : pack the local environment and send it the S3 bucket. zappa manage dev migrate : applies migration on the deployed app (== ./manage.py migrate). zappa_settings.json This is the core configuration for the deployment. Zappa is the tool used to simplify AWS infrastructure creation. The aws_environment_variables holds the environment variables that will be passed to the AWS Lambda. Since there are secure variables, we leave them empty and let Travis fill them up before deploying (write_secure_env.py). Deploying a production version For a production version, the same steps are done manually. As of now, the AWS infrastructure is created by hand. Refer to our infrastructure documentation for more informations.","title":"Deploying to the development server"},{"location":"DEPLOYING/#deploying-to-the-development-server","text":"The development branch already has continuous deployment enabled. Every time a new commit is pushed to the develop branch of this project, unit tests are executed and the updated version is deployed is the tests are successful. To mimick AWS Lambda's environment, we use a special Docker container (lambci/lambda:build-python3.6). That allows us to recreate the same environment anywhere, be it on a development PC or Travis.","title":"Deploying to the development server"},{"location":"DEPLOYING/#travisyml","text":"This file is pretty straightforward. It dictates Travis what to do. It contains some sensitive information in the form of encrypted environment variables: SENDINBLUE_API_KEY SECRET_KEY DATABASE_URL PAYSAFE_ACCOUNT_NUMBER PAYSAFE_USER PAYSAFE_PASSWORD EMAIL_HOST_PASSWORD AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY Those, along with the unencrypted variables, are used by Travis during the unit tests and used to set up Zappa settings before deployment. NOTE: If you inspect the settings.py file, you'll see that some settings are overwritten when in \"test\" mode. For example, the database used in unit tests will always be a sqlite3 database, regardless of the DATABASE_URL environment variable you set.","title":".travis.yml"},{"location":"DEPLOYING/#write_secure_envpy","text":"That script is executed by Travis to fill the empty variables in zappa_settings.json . Travis is the only one to be able to decrypt the variables mentionned above, thus explaining the need for this script.","title":"write_secure_env.py"},{"location":"DEPLOYING/#deploysh","text":"This script automatize the environement creation and the deployment. An initial deployment with zappa is done with zappa deploy <stage> , where stage can be any string. That part is usually done by hand by a developer. It creates the necessary infrastructure on AWS. For the continuous deployment, we simply update the already deployed application using: zappa update dev : pack the local environment and send it the S3 bucket. zappa manage dev migrate : applies migration on the deployed app (== ./manage.py migrate).","title":"deploy.sh"},{"location":"DEPLOYING/#zappa_settingsjson","text":"This is the core configuration for the deployment. Zappa is the tool used to simplify AWS infrastructure creation. The aws_environment_variables holds the environment variables that will be passed to the AWS Lambda. Since there are secure variables, we leave them empty and let Travis fill them up before deploying (write_secure_env.py).","title":"zappa_settings.json"},{"location":"DEPLOYING/#deploying-a-production-version","text":"For a production version, the same steps are done manually. As of now, the AWS infrastructure is created by hand. Refer to our infrastructure documentation for more informations.","title":"Deploying a production version"},{"location":"api/memberships/","text":"Duration Membership are most of the time defined to 1 year in Thesez-Vous but you're free to define a different duration to each memberships of the platform. This allow you, for example, to create a membership of 3 month only or of 2 years. Limitation on academic levels All the membership created inside the platform are available on conditions based on user's academic level. You can set it available to only one or multiple membership but it's also possible to set it available to everybody by adding no one academic level in the academic level field of the membership. Warning User can define his academic level during his registration but have no way to edit it after. It's a limitation since some users can submit error on their profile during the registration or can have some changes in their status in the future. Renewal of membership There is no auto-renewal of membership in the platform but members have the right to renew their membership 30 days before the end of their memberships. When user renew before the end of his memberships the new membership will be the one selected of the user but the duration will be the duration of membership selected in addition to the time remaining of the old membership. Warning If user bought a membership for 10$ and renew 30 days before to a membership at 100$ he got 30 days of a better membership without paying the difference. You always need to keep that in mind in case of specific usage.","title":"Membership management"},{"location":"api/memberships/#duration","text":"Membership are most of the time defined to 1 year in Thesez-Vous but you're free to define a different duration to each memberships of the platform. This allow you, for example, to create a membership of 3 month only or of 2 years.","title":"Duration"},{"location":"api/memberships/#limitation-on-academic-levels","text":"All the membership created inside the platform are available on conditions based on user's academic level. You can set it available to only one or multiple membership but it's also possible to set it available to everybody by adding no one academic level in the academic level field of the membership. Warning User can define his academic level during his registration but have no way to edit it after. It's a limitation since some users can submit error on their profile during the registration or can have some changes in their status in the future.","title":"Limitation on academic levels"},{"location":"api/memberships/#renewal-of-membership","text":"There is no auto-renewal of membership in the platform but members have the right to renew their membership 30 days before the end of their memberships. When user renew before the end of his memberships the new membership will be the one selected of the user but the duration will be the duration of membership selected in addition to the time remaining of the old membership. Warning If user bought a membership for 10$ and renew 30 days before to a membership at 100$ he got 30 days of a better membership without paying the difference. You always need to keep that in mind in case of specific usage.","title":"Renewal of membership"},{"location":"api/retreats/","text":"Limitation on memberships Retreats can be limited to specific memberships in order to force user buy membership before access specific retreat. You can limit retreat to one or multiple memberships, or you can let it available to everyone by not selecting any memberships in the memberships field of the retreat. Tip Limitation on memberships work on membership already active on the user but also on membership in his cart at the moment he buy the retreat. This allow the user to buy a specific membership AND a retreat limiter to this specific membership at the same time with only one financial transaction. Hidden retreat Hidden retreats are retreat only available by invitation links that are not public as long as everybody share it properly. They are exactly as a default retreat but they are only available from the invitations link. To create an hidden retreat you just need to create a retreat and define it as hidden in its attributes Invitation link Invitation link allow user to reserve the retreat from a specific link and can contain some privileges to help sales. They are used in multiples context as for reserve place for a subset of user or to handle hidden retreat. When you create a retreat invitation, you will need to ask you some questions: What is a proper internal name to be able to differentiate each invitation link It's important to have a good management of the links since deadlines and money are to take in context How many people can reserve place from this link at maximum It's really important in case your retreat is an hidden retreat since it will not be available from the default flow of the platform. Do you want this invitation to have reserved place in the retreat If you active this option it will block the invitation link number of places on the default flow, so people using the link are sure to have the number of place defined in the link even if people without link tried to reserve places before them. virtual retreat Virtual retreats are a type of retreat that allow user to access video-conference link in case they reserve a place to the retreat. The link of the video-conference is visible 30 minutes before the beginning of the retreat, in order to let him some time of setup if necessary","title":"Retreat management"},{"location":"api/retreats/#limitation-on-memberships","text":"Retreats can be limited to specific memberships in order to force user buy membership before access specific retreat. You can limit retreat to one or multiple memberships, or you can let it available to everyone by not selecting any memberships in the memberships field of the retreat. Tip Limitation on memberships work on membership already active on the user but also on membership in his cart at the moment he buy the retreat. This allow the user to buy a specific membership AND a retreat limiter to this specific membership at the same time with only one financial transaction.","title":"Limitation on memberships"},{"location":"api/retreats/#hidden-retreat","text":"Hidden retreats are retreat only available by invitation links that are not public as long as everybody share it properly. They are exactly as a default retreat but they are only available from the invitations link. To create an hidden retreat you just need to create a retreat and define it as hidden in its attributes","title":"Hidden retreat"},{"location":"api/retreats/#invitation-link","text":"Invitation link allow user to reserve the retreat from a specific link and can contain some privileges to help sales. They are used in multiples context as for reserve place for a subset of user or to handle hidden retreat. When you create a retreat invitation, you will need to ask you some questions: What is a proper internal name to be able to differentiate each invitation link It's important to have a good management of the links since deadlines and money are to take in context How many people can reserve place from this link at maximum It's really important in case your retreat is an hidden retreat since it will not be available from the default flow of the platform. Do you want this invitation to have reserved place in the retreat If you active this option it will block the invitation link number of places on the default flow, so people using the link are sure to have the number of place defined in the link even if people without link tried to reserve places before them.","title":"Invitation link"},{"location":"api/retreats/#virtual-retreat","text":"Virtual retreats are a type of retreat that allow user to access video-conference link in case they reserve a place to the retreat. The link of the video-conference is visible 30 minutes before the beginning of the retreat, in order to let him some time of setup if necessary","title":"virtual retreat"},{"location":"api/wait_queue_management/","text":"This document is here to illustrate the wait queue functionnality of the system. Terminology Term Definition WaitQueue A wait queue is waiting place of a user for the specific retreat. WaitQueues are ordered by creation date (first in, first out) WaitQueuePlace A WaitQueuePlace is a retirement place available for waiting people. Each time a new WaitQueuePlace is created, the system will begin notify people in order to fill it and find a new customer. WaitQueuePlaceReserved A WaitQueuePlaceReserved is kind of a ticket authorization that we give to waiting people to say that they have the right to fill a WaitQueuePlace. The system create WaitQueuePlaceReserverd each 24h for the next customer in line. Process Initialisation At the beginning, there is nothing. We can see on the left the WaitQueue (people in queue) and on the bottom the new place that we need to fill. A reservation is cancelled When a reservation is cancelled, the system will automatically create a first WaitQueuePlace in order to notify waiting people and find a new customer. Here we can see that the first user has automatically been notified, he now have a WaitQueuePlaceReserved Nothing new, time fly If the first user in queue (WaitQueue 1) don't buy the retirement's place available for him, the system automatically notify the second user in queue in order to find a customer motivated with the product. Here we can see that the second user has automatically been notified, he now have a WaitQueuePlaceReserved NB: At this step, both users can reserve the WaitQueuePlace and fill the empty seat of the retirement. The second user need to be fast if he don't want to be notified for nothing. A second reservation is cancelled Let's imagine that a second reservation is now cancelled: The first WaitQueuePlace is not filled for the moment A second WaitQueuePlace is created and we need to find a customer User 1 & 2 are already notified that they are allowed to buy a place Since there is no reason to re-notify user 1 & 2, the system will automatically notify the third user. NB: We can see that we create WaitQueuePlaceReserved for user 1 & 2 but without notification (ie: emails) to allow us to reserve the second place but without being spammed with out notification. User 2 reserve a place Now, let's see what's going on if user 2 want to reserve a place to the retirement: The first WaitQueuePlace is now filled WaitingQueuePlaceReserved for user 1 on place 1 is now unavailable Since user 1 has already been notify at the beginning and that he is always authorize to reserve a place, there is no need to notify him. NB: At this step we now have only one place available for waiting user. Notification interval is done After the notification interval (24H), what will be the next step for the automatic system ? : Only one WaitingQueuePlace is available (#2) User 1 & 3 are already notified User 2 is already participant on the retirement We will notify the next user on queue (user 4) We are exactly in the same case as when we notified user 2 for the WaitingQueuePlace 1. User 3 reserve a place Now, let's imagine we are on a good day and user 3 reserve a place (24H): The second WaitQueuePlace is now filled WaitingQueuePlaceReserved for all users of WaitingQueuePlace2 are now unavailable Since there is no more place available, the waiting queue is just stopped until a new reservation will be cancelled An other reservation is cancelled If a new retirement cancellation occur: A new WaitingQueuePlace is created (as always) A WaitingQueuePlaceReserved is created for user 1 User 1 is notify since he have now a new chance to reserve a place This step is kind of a new beginning since all the users lost their right to reserve a place before. We need to re-notify all of them, one by one.","title":"Wait queue management"},{"location":"api/wait_queue_management/#terminology","text":"Term Definition WaitQueue A wait queue is waiting place of a user for the specific retreat. WaitQueues are ordered by creation date (first in, first out) WaitQueuePlace A WaitQueuePlace is a retirement place available for waiting people. Each time a new WaitQueuePlace is created, the system will begin notify people in order to fill it and find a new customer. WaitQueuePlaceReserved A WaitQueuePlaceReserved is kind of a ticket authorization that we give to waiting people to say that they have the right to fill a WaitQueuePlace. The system create WaitQueuePlaceReserverd each 24h for the next customer in line.","title":"Terminology"},{"location":"api/wait_queue_management/#process","text":"","title":"Process"},{"location":"api/wait_queue_management/#initialisation","text":"At the beginning, there is nothing. We can see on the left the WaitQueue (people in queue) and on the bottom the new place that we need to fill.","title":"Initialisation"},{"location":"api/wait_queue_management/#a-reservation-is-cancelled","text":"When a reservation is cancelled, the system will automatically create a first WaitQueuePlace in order to notify waiting people and find a new customer. Here we can see that the first user has automatically been notified, he now have a WaitQueuePlaceReserved","title":"A reservation is cancelled"},{"location":"api/wait_queue_management/#nothing-new-time-fly","text":"If the first user in queue (WaitQueue 1) don't buy the retirement's place available for him, the system automatically notify the second user in queue in order to find a customer motivated with the product. Here we can see that the second user has automatically been notified, he now have a WaitQueuePlaceReserved NB: At this step, both users can reserve the WaitQueuePlace and fill the empty seat of the retirement. The second user need to be fast if he don't want to be notified for nothing.","title":"Nothing new, time fly"},{"location":"api/wait_queue_management/#a-second-reservation-is-cancelled","text":"Let's imagine that a second reservation is now cancelled: The first WaitQueuePlace is not filled for the moment A second WaitQueuePlace is created and we need to find a customer User 1 & 2 are already notified that they are allowed to buy a place Since there is no reason to re-notify user 1 & 2, the system will automatically notify the third user. NB: We can see that we create WaitQueuePlaceReserved for user 1 & 2 but without notification (ie: emails) to allow us to reserve the second place but without being spammed with out notification.","title":"A second reservation is cancelled"},{"location":"api/wait_queue_management/#user-2-reserve-a-place","text":"Now, let's see what's going on if user 2 want to reserve a place to the retirement: The first WaitQueuePlace is now filled WaitingQueuePlaceReserved for user 1 on place 1 is now unavailable Since user 1 has already been notify at the beginning and that he is always authorize to reserve a place, there is no need to notify him. NB: At this step we now have only one place available for waiting user.","title":"User 2 reserve a place"},{"location":"api/wait_queue_management/#notification-interval-is-done","text":"After the notification interval (24H), what will be the next step for the automatic system ? : Only one WaitingQueuePlace is available (#2) User 1 & 3 are already notified User 2 is already participant on the retirement We will notify the next user on queue (user 4) We are exactly in the same case as when we notified user 2 for the WaitingQueuePlace 1.","title":"Notification interval is done"},{"location":"api/wait_queue_management/#user-3-reserve-a-place","text":"Now, let's imagine we are on a good day and user 3 reserve a place (24H): The second WaitQueuePlace is now filled WaitingQueuePlaceReserved for all users of WaitingQueuePlace2 are now unavailable Since there is no more place available, the waiting queue is just stopped until a new reservation will be cancelled","title":"User 3 reserve a place"},{"location":"api/wait_queue_management/#an-other-reservation-is-cancelled","text":"If a new retirement cancellation occur: A new WaitingQueuePlace is created (as always) A WaitingQueuePlaceReserved is created for user 1 User 1 is notify since he have now a new chance to reserve a place This step is kind of a new beginning since all the users lost their right to reserve a place before. We need to re-notify all of them, one by one.","title":"An other reservation is cancelled"},{"location":"emails/getting_started/","text":"Getting started with emails Thesez-Vous platform allow you to use multiple Email Service Provider and to custom every email sent by the platform. ESP supported Since we use Anymail for all our sending of email you can use any ESP officially supported in its documentation Anymail documentation Note Since SendinBlue is our loved choice for internal development, it's the only one ESP fully tested with the platform. However, if you have a problem with one of the other ESP supported by Anymail, feel free to contact the support team to evaluate the problem and enhance the support to your favorite ESP.","title":"Getting started"},{"location":"emails/getting_started/#getting-started-with-emails","text":"Thesez-Vous platform allow you to use multiple Email Service Provider and to custom every email sent by the platform.","title":"Getting started with emails"},{"location":"emails/getting_started/#esp-supported","text":"Since we use Anymail for all our sending of email you can use any ESP officially supported in its documentation Anymail documentation Note Since SendinBlue is our loved choice for internal development, it's the only one ESP fully tested with the platform. However, if you have a problem with one of the other ESP supported by Anymail, feel free to contact the support team to evaluate the problem and enhance the support to your favorite ESP.","title":"ESP supported"},{"location":"emails/templates/","text":"Email templates Here is the list of all variables you can use in your Email Service Provider for each email template used inside the project. Warning Multiple emails are not migrated to ESP's template and need a developer to be updated at this time. If one of the emails you want to change is not listed here do not hesitate to contact the support team to plan the migration of the email you need. WELCOME_VIRTUAL_RETREAT This email is sent when a user reserve a place to a virtual retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE - WELCOME_PHYSICAL_RETREAT This email is sent when a user reserve a place to a physical retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05 REMINDER_VIRTUAL_RETREAT This email is sent 1 day before a virtual retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE - REMINDER_PHYSICAL_RETREAT This email is sent 7 days before a physical retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05 THROWBACK_VIRTUAL_RETREAT This email is sent 1 day after a virtual retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_REVIEW_FORM - LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE - THROWBACK_PHYSICAL_RETREAT This email is sent 1 day after a physical retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_PLACE - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05","title":"Templates"},{"location":"emails/templates/#email-templates","text":"Here is the list of all variables you can use in your Email Service Provider for each email template used inside the project. Warning Multiple emails are not migrated to ESP's template and need a developer to be updated at this time. If one of the emails you want to change is not listed here do not hesitate to contact the support team to plan the migration of the email you need.","title":"Email templates"},{"location":"emails/templates/#welcome_virtual_retreat","text":"This email is sent when a user reserve a place to a virtual retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE -","title":"WELCOME_VIRTUAL_RETREAT"},{"location":"emails/templates/#welcome_physical_retreat","text":"This email is sent when a user reserve a place to a physical retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05","title":"WELCOME_PHYSICAL_RETREAT"},{"location":"emails/templates/#reminder_virtual_retreat","text":"This email is sent 1 day before a virtual retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE -","title":"REMINDER_VIRTUAL_RETREAT"},{"location":"emails/templates/#reminder_physical_retreat","text":"This email is sent 7 days before a physical retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05","title":"REMINDER_PHYSICAL_RETREAT"},{"location":"emails/templates/#throwback_virtual_retreat","text":"This email is sent 1 day after a virtual retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_START_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_START_TIME Format examples: 1h30, 12h30, 1h00, 1h05 RETREAT_END_DATE Format examples: 3 janvier 2020 (in french only) RETREAT_END_TIME Format examples: 1h30, 12h30, 1h00, 1h05 LINK_TO_REVIEW_FORM - LINK_TO_BE_PREPARED Link to know how to prepare LINK_TO_USER_PROFILE -","title":"THROWBACK_VIRTUAL_RETREAT"},{"location":"emails/templates/#throwback_physical_retreat","text":"This email is sent 1 day after a physical retreat to all user with a reservation on that retreat Variable Description USER_FIRST_NAME - USER_LAST_NAME - USER_EMAIL - RETREAT_NAME - RETREAT_PLACE - RETREAT_START_TIME Format examples: 2020-01-25 01:05 RETREAT_END_TIME Format examples: 2020-01-25 01:05","title":"THROWBACK_PHYSICAL_RETREAT"},{"location":"getting_started/docker/","text":"Getting started with Docker Prerequisites Docker Initialize the project One command only will allow you to initialize the database, run the migration on it, configure you API, launch your documentation website and allow you to begin use the project: docker-compose up Warning This step can take some time on first launch but you should see periodic message to inform you that the work is in progress. Breathe in, breathe out, have a coffee and come back in 2-3 minutes Create super admin Since you don't have user the first time you launch the API you will need to execute this command in a separate terminal. docker-compose run api python manage.py createsuperuser Tip If you try to understand this command you can see that we ask docker-compose to run a command on the api image that represent our API in the docker-compose.yml . The command is python manage.py createsuperuser , the default Django command to create a new superuser. With this technique you can execute other Django commands like migrate , makemigrations , makemessages or even custom command you create to automatise your tasks. Configurations If you want to modify some settings of your Docker image you can just overwrite your .env.docker file with the ENV variable that you want. Differents Django settings are based on ENV variables as you can see in blitz_api/settings.py Danger Take care to not push your confidentials credentials when you push code to our repository or on your open-source forks. You can review your change by using git diff before committing your change. Danger Try to always use python-decouple to manage your settings and to not directly edit the settings.py . Using the services You can now visit these links to validate the installation: The root of the API (will need authentication as a first step): http://localhost:8000/ The admin site: http://localhost:8000/admin/ The documentation you're reading: http://localhost:8001/ Do not hesitate to check the API section of this documentation to know how to authenticate yourself with the API and begin asking queries.","title":"Install with Docker"},{"location":"getting_started/docker/#getting-started-with-docker","text":"","title":"Getting started with Docker"},{"location":"getting_started/docker/#prerequisites","text":"Docker","title":"Prerequisites"},{"location":"getting_started/docker/#initialize-the-project","text":"One command only will allow you to initialize the database, run the migration on it, configure you API, launch your documentation website and allow you to begin use the project: docker-compose up Warning This step can take some time on first launch but you should see periodic message to inform you that the work is in progress. Breathe in, breathe out, have a coffee and come back in 2-3 minutes","title":"Initialize the project"},{"location":"getting_started/docker/#create-super-admin","text":"Since you don't have user the first time you launch the API you will need to execute this command in a separate terminal. docker-compose run api python manage.py createsuperuser Tip If you try to understand this command you can see that we ask docker-compose to run a command on the api image that represent our API in the docker-compose.yml . The command is python manage.py createsuperuser , the default Django command to create a new superuser. With this technique you can execute other Django commands like migrate , makemigrations , makemessages or even custom command you create to automatise your tasks.","title":"Create super admin"},{"location":"getting_started/docker/#configurations","text":"If you want to modify some settings of your Docker image you can just overwrite your .env.docker file with the ENV variable that you want. Differents Django settings are based on ENV variables as you can see in blitz_api/settings.py Danger Take care to not push your confidentials credentials when you push code to our repository or on your open-source forks. You can review your change by using git diff before committing your change. Danger Try to always use python-decouple to manage your settings and to not directly edit the settings.py .","title":"Configurations"},{"location":"getting_started/docker/#using-the-services","text":"You can now visit these links to validate the installation: The root of the API (will need authentication as a first step): http://localhost:8000/ The admin site: http://localhost:8000/admin/ The documentation you're reading: http://localhost:8001/ Do not hesitate to check the API section of this documentation to know how to authenticate yourself with the API and begin asking queries.","title":"Using the services"},{"location":"getting_started/virtualenv/","text":"Danger This section is not documented and any contribution on this part of the documentation is welcome","title":"Install manually"}]}